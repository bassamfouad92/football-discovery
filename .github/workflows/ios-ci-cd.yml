name: iOS CI/CD with App Center

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test Default Scheme
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default_scheme=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default_scheme | cat > default
          echo "Using default scheme: $default_scheme"

      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          
      - name: Build Archive
        run: |
          xcodebuild build -workspace FootballDiscovery.xcodeproj/project.xcworkspace -configuration Automation -scheme FootballDiscovery "OTHER_CODE_SIGN_FLAGS=--keychain '$KEYCHAIN_PASSWORD'"
          xcodebuild archive -workspace FootballDiscovery.xcodeproj/project.xcworkspace -scheme FootballDiscovery -archivePath FootballDiscovery.xcarchive
          xcodebuild -exportArchive -archivePath FootballDiscovery.xcarchive -exportPath . -exportOptionsPlist ./ExportOptions.plist

      # Collect the file and upload as artifact
      - name: Collect and upload IPA artifacts
        uses: actions/upload-artifact@v2
        with:
         name: release-ipa
         # Path to the release files
         path: build/ios/ipa/*.ipa

      - name: Check files in build/ios/ipa directory
        run: ls -R build/ios/ipa
         
      - name: Check files in release-ipa directory
        run: ls -R ${{ github.workspace }}/release-ipa
  
  release:
    name: Release ipa to App Center
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    
    # Retrieve ipa file from GitHub artifacts
    - uses: actions/checkout@v2
    - name: Get release-ipa from artifacts
      uses: actions/download-artifact@v2
      with:
        name: release-ipa

    # Upload ipa file to App Center
    - name: Upload artifact to App Center
      uses: wzieba/AppCenter-Github-Action@v1.3.4
      with:
        appName: 'wzieba/Football-Discovery'  # Replace with your App Center app name
        token: ${{ secrets.APP_CENTER_SECRET }}
        file: ${{ github.workspace }}/release-ipa/*.ipa
        group: 'Beta Testers'
        notifyTesters: true
        debug: false
